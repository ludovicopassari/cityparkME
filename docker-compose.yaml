services:
  nginx-backend:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./php:/var/www/html
    depends_on:
      - php
      - mysql
    networks:
      - app_network
    
  nginx-frontend:
    image: nginx:latest
    ports:
      - "8082:80"
    volumes:
      - ./app_frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./app_frontend/html:/var/www/html
    depends_on: 
      - php
      - mysql
    networks:
      - app_network


  php:
    build:
      context: ./php # La directory contenente il Dockerfile
    container_name: php
    volumes:
      - ./php:/var/www/html
    depends_on:
      - mysql
    networks:
      - app_network

  auth:
    build: 
      context: ./authentication_server
    container_name: authentication_server
    volumes:
      - ./authentication_server/app:/app
    ports:
      - "5001:5000"
    networks:
      - app_network
  mysql:
    image: mysql:latest
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword  # Password per l'utente root
      MYSQL_DATABASE: my_database        # Nome del database da creare all'avvio
      MYSQL_USER: my_user                # Nome dell'utente non-root
      MYSQL_PASSWORD: userpassword   
    ports:
      - "3333:3306"
    volumes:
      - mysql_volume:/var/lib/mysql  
    networks:
      - app_network
      
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql 
      PMA_PORT: 3306
      PMA_USER: my_user
      PMA_PASSWORD: userpassword
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - app_network
  
networks:
  app_network:
    driver: bridge

volumes:
  mysql_volume: